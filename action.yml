name: Gcovr Action
description: Generate code coverage report for C++ project using gcovr
author: Alfi Maulana
inputs:
  root:
    description: 'The root directory of your source files'
    required: false
  gcov-executable:
    description: 'Use a particular gcov executable'
    required: false
  exclude:
    description: 'Exclude source files that match this filter'
    required: false
  fail-under-line:
    description: 'Exit with a status of 2 if the total line coverage is less than this value'
    required: false
  coveralls-out:
    description: 'Output of generated Coveralls API coverage report'
    required: false
branding:
  color: green
  icon: terminal
runs:
  using: composite
  steps:
    - name: Check if gcovr is installed
      shell: bash
      run: |
        if ! command -v gcovr &> /dev/null; then
          echo "gcovr could not be found, installing..."
          pip install gcovr
        fi

    - name: Process inputs
      shell: bash
      run: |
        if [ -n '${{ inputs.root }}' ]; then
          ARGS="$ARGS --root '${{ inputs.root }}'"
        fi
        if [ -n '${{ inputs.gcov-executable }}' ]; then
          ARGS="$ARGS --gcov-executable '${{ inputs.gcov-executable }}'"
        fi
        if [ -n '${{ inputs.exclude }}' ]; then
          ARGS="$ARGS --exclude '${{ inputs.exclude }}'"
        fi
        if [ -n '${{ inputs.fail-under-line }}' ]; then
          ARGS="$ARGS --fail-under-line '${{ inputs.fail-under-line }}'"
        fi
        if [ -n '${{ inputs.coveralls-out }}' ]; then
          ARGS="$ARGS --coveralls '${{ inputs.coveralls-out }}'"
        fi
        echo "GCOVR_ARGS=$ARGS" >> $GITHUB_ENV

    - name: Generate code coverage report using gcovr
      shell: bash
      run: gcovr ${{ env.GCOVR_ARGS }}
